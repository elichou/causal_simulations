<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.5">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': '', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="fileList" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2021.2.3" valType="str" updates="None" name="Use version"/>
    <Param val="[2560, 1440]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="untitled" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="MIDDLE_BUTTON" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="trial"/>
    <Routine name="fixation">
      <CodeComponent name="code_fixation">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="portt = [];&amp;#10;&amp;#10;stim_sizes = [0.15, 0.15];&amp;#10;fix_size = [0.015,0.015]" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="portt = [];&amp;#10;stim_sizes = [0.15, 0.15];&amp;#10;fix_size = [0.015, 0.015];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="buttons = 0;&amp;#10;dur_fix = 40;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="buttons = 0;&amp;#10;dur_fix = 40&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_fixation" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_fixation">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_fixation" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="constant" name="shape"/>
        <Param val="fix_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="$dur_fix" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="$dur_fix" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="info_stim1">
      <CodeComponent name="code_info">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="stim_sizes = [0.1, 0.1];&amp;#10;instr = '';&amp;#10;mov = '';&amp;#10;green_f = 0;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="stim_sizes = [0.1, 0.1];&amp;#10;instr = &quot;&quot;;&amp;#10;mov = &quot;&quot;;&amp;#10;green_f = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (_pj.in_es6(trial_n, [11])) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;im1 = &quot;b_4.png&quot;;&amp;#10;im2 = &quot;g_4.png&quot;;&amp;#10;im3 = &quot;p_4.png&quot;;&amp;#10;im4 = &quot;y_4.png&quot;;&amp;#10;instr = `Well done! You gained ${points_won} points. There is no perfect number of points but try to always maximise them. \n Press a button to start the main game whenever you're ready.`&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trial_n in [11]:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;im1 = 'b_4.png'&amp;#10;im2 = 'g_4.png'&amp;#10;im3 = 'p_4.png'&amp;#10;im4 = 'y_4.png'&amp;#10;instr = &quot;Well done! You gained %s points. There is no perfect number of points but try to always maximise them. \n Press a button to start the main game whenever you're ready.&quot; % str(points_won)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_info" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.026" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$instr" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="0.56" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im1" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.1, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.034, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.034, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im4" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.1, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="green_frame">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="outline.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="green_frame" valType="code" updates="None" name="name"/>
        <Param val="green_f" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.7778, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="cues">
      <CodeComponent name="code_resp">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="show_me_left = 0&amp;#10;show_me_right = 0&amp;#10;keep_me_left = 0&amp;#10;keep_me_right = 0&amp;#10;correct_count = 0&amp;#10;&amp;#10;msg = '';&amp;#10;points_won = 0;&amp;#10;grand_total = 0;&amp;#10;portt = 99;&amp;#10;res = ''" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="show_me_left = 0;&amp;#10;show_me_right = 0;&amp;#10;keep_me_left = 0;&amp;#10;keep_me_right = 0;&amp;#10;correct_count = 0;&amp;#10;msg = &quot;&quot;;&amp;#10;points_won = 0;&amp;#10;grand_total = 0;&amp;#10;portt = 99;&amp;#10;res = &quot;&quot;;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="dur_cues = 120;&amp;#10;if ((trial_n === 11)) {&amp;#10;    points_won = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="dur_cues = 120&amp;#10;&amp;#10;if trial_n == 11:&amp;#10;    points_won = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (typeof key_resp_3.keys === 'undefined') {&amp;#10;    msg = &quot;Too slow&quot;;&amp;#10;    show_me_left = 0;&amp;#10;    show_me_right = 0;&amp;#10;    keep_me_left = 1;&amp;#10;    keep_me_right = 1;&amp;#10;    feed = left_rew;&amp;#10;    feed_pos = [1, (- 0.02)];&amp;#10;} else {&amp;#10;    if (_pj.in_es6(key_resp_3.keys, &quot;right&quot;)) {&amp;#10;        show_me_left = 0;&amp;#10;        show_me_right = 1;&amp;#10;        keep_me_left = 1;&amp;#10;        keep_me_right = 0;&amp;#10;        feed = right_rew;&amp;#10;        feed_pos = [0.06, (- 0.03)];&amp;#10;        res = 'rrr';&amp;#10;        msg = &quot;&quot;;&amp;#10;        points_won = (points_won + right_rew_dbl);&amp;#10;        grand_total = (grand_total + right_rew_dbl);&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(key_resp_3.keys, &quot;left&quot;)) {&amp;#10;            show_me_left = 1;&amp;#10;            show_me_right = 0;&amp;#10;            keep_me_left = 0;&amp;#10;            keep_me_right = 1;&amp;#10;            feed = left_rew;&amp;#10;            feed_pos = [(- 0.06), (- 0.03)];&amp;#10;            msg = &quot;&quot;;&amp;#10;            res = 'lll';&amp;#10;            points_won = (points_won + left_rew_dbl);&amp;#10;            grand_total = (grand_total + left_rew_dbl);&amp;#10;        } else {&amp;#10;            if (typeof key_resp_3.keys !== 'undefined') {&amp;#10;                msg = &quot;Wrong button&quot;;&amp;#10;                show_me_left = 0;&amp;#10;                show_me_right = 0;&amp;#10;                keep_me_left = 1;&amp;#10;                keep_me_right = 1;&amp;#10;                feed = left_rew;&amp;#10;                feed_pos = [1, (- 0.02)];&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if (((res === &quot;lll&quot;) &amp;&amp; (correct === 0))) {&amp;#10;    correct_count = (correct_count + 1);&amp;#10;} else {&amp;#10;    if (((res === &quot;rrr&quot;) &amp;&amp; (correct === 1))) {&amp;#10;        correct_count = (correct_count + 1);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_3.keys in ['', [], None]:&amp;#10;   msg = 'Too slow'&amp;#10;   show_me_left = 0&amp;#10;   show_me_right = 0&amp;#10;   keep_me_left = 1&amp;#10;   keep_me_right = 1&amp;#10;   feed = left_rew&amp;#10;   feed_pos = [1, -0.8]&amp;#10;elif key_resp_3.keys in 'right':&amp;#10;   show_me_left = 0&amp;#10;   show_me_right = 1&amp;#10;   keep_me_left = 1&amp;#10;   keep_me_right = 0&amp;#10;   feed =  right_rew&amp;#10;   feed_pos = [0.06, -0.03]&amp;#10;   res = 'rrr'&amp;#10;   msg = ''&amp;#10;   points_won = points_won + right_rew_dbl;&amp;#10;   grand_total = grand_total + right_rew_dbl;&amp;#10;elif key_resp_3.keys in 'left':&amp;#10;   show_me_left = 1&amp;#10;   show_me_right = 0&amp;#10;   keep_me_left = 0&amp;#10;   keep_me_right = 1&amp;#10;   feed = left_rew&amp;#10;   feed_pos = [-0.06, -0.03]&amp;#10;   res = 'lll'&amp;#10;   msg = ''&amp;#10;   points_won = points_won + left_rew_dbl;&amp;#10;   grand_total = grand_total + left_rew_dbl;&amp;#10;elif key_resp_3.keys != None: &amp;#10;   msg = 'Wrong button'&amp;#10;   show_me_left = 0&amp;#10;   show_me_right = 0&amp;#10;   keep_me_left = 1&amp;#10;   keep_me_right = 1&amp;#10;   feed = left_rew&amp;#10;   feed_pos = [1, -0.8]&amp;#10;&amp;#10;if res == 'lll' and correct == 0:&amp;#10;    correct_count = correct_count+1;&amp;#10;elif res == 'rrr' and correct == 1:&amp;#10;    correct_count = correct_count+1;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_resp" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_stim2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_stim2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="constant" name="shape"/>
        <Param val="fix_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="dur_cues" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="symbol_left">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="symbol_left" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="dur_cues" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="symbol_right">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="symbol_right" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="dur_cues" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_3">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="feedback">
      <CodeComponent name="code_feed">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((msg === &quot;Wrong button&quot;) || (msg === &quot;Too slow&quot;))) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    continueRoutine = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if msg == 'Wrong button' or msg == 'Too slow':&amp;#10;    continueRoutine = False&amp;#10;else:&amp;#10;    continueRoutine = True&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_feed" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_feed">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_feed" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="constant" name="shape"/>
        <Param val="fix_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="s_left">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_left" valType="code" updates="None" name="name"/>
        <Param val="keep_me_left" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="s_right">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_right" valType="code" updates="None" name="name"/>
        <Param val="keep_me_right" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="s_if_left">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left_selected" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_if_left" valType="code" updates="None" name="name"/>
        <Param val="show_me_left" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="s_if_right">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right_selected" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_if_right" valType="code" updates="None" name="name"/>
        <Param val="show_me_right" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="text_2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="feed_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$feed" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_5">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$correct_count" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="too_slow">
      <CodeComponent name="code_slow">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((msg === &quot;Wrong button&quot;) || (msg === &quot;Too slow&quot;))) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if msg == 'Wrong button' or msg == 'Too slow':&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="msg = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="msg = '';" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_slow" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_slow">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_slow" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="constant" name="shape"/>
        <Param val="fix_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="s_left_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_left_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="s_right_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_right_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="text_3">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0,-0.08]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="general_feed">
      <CodeComponent name="code_gen_feed">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="fix_size = [0.02,0.02]&amp;#10;opacity_im = 1&amp;#10;msg_end = '';" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="fix_size = [0.02, 0.02];&amp;#10;opacity_im = 1;&amp;#10;msg_end = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((correct_count &gt; 60)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;opacity_n = 1;&amp;#10;msg_end = ((&quot;Task finished. Well Done! Total points won: &quot; + grand_total.toString()) + &quot;\n Ending experiment&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if correct_count &gt; 60:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;opacity_n = 1&amp;#10;msg_end = 'Task finished. Well Done! Total points won: ' + str(grand_total) + '\n Ending experiment'&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((correct_count &gt; 60)) {&amp;#10;    trials_3.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if correct_count &gt; 60:&amp;#10;    trials_3.finished = True;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_gen_feed" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_6">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_6" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg_end" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="cues_passive">
      <CodeComponent name="code_cues_p">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;feed_pos = [1, 1]&amp;#10;show_me_left = 0&amp;#10;show_me_right = 0&amp;#10;keep_me_left = 0&amp;#10;keep_me_right = 0&amp;#10;&amp;#10;msg = '';&amp;#10;points_won = 0;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="feed_pos = [1, 1];&amp;#10;show_me_left = 0;&amp;#10;show_me_right = 0;&amp;#10;keep_me_left = 0;&amp;#10;keep_me_right = 0;&amp;#10;msg = &quot;&quot;;&amp;#10;points_won = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((portt !== 99)) {&amp;#10;    pp = Number.parseInt(trigger_integer);&amp;#10;    p_port.setData(pp);&amp;#10;} else {&amp;#10;}&amp;#10;if (_pj.in_es6(key_resp_6.keys, [&quot;&quot;, [], null])) {&amp;#10;    trials_2.finished = 0;&amp;#10;} else {&amp;#10;    trials_2.finished = 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if portt != 99:&amp;#10;    pp = int(trigger_integer)&amp;#10;    p_port.setData(pp)&amp;#10;else:&amp;#10;    pass&amp;#10;&amp;#10;if key_resp_6.keys in ['', [], None]:&amp;#10;    trials_2.finished = 0&amp;#10;else:&amp;#10;    trials_2.finished = 1&amp;#10;    &amp;#10;#if trials_2.thisTrialN &gt; 35:&amp;#10;#    trials_2.finished = 1&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((portt !== 99)) {&amp;#10;    p_port.setData(0);&amp;#10;} else {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if portt != 99:&amp;#10;    p_port.setData(0)&amp;#10;else:&amp;#10;    pass&amp;#10;&amp;#10;        " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_cues_p" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_stim">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_stim" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="constant" name="shape"/>
        <Param val="fix_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="symbol_left_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="symbol_left_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.05, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="symbol_right_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="symbol_right_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.05, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_6">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="selection_animation">
      <CodeComponent name="code_sel">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((msg === &quot;Wrong button&quot;) || (msg === &quot;Too slow&quot;))) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    continueRoutine = true;&amp;#10;}&amp;#10;dur_sel = 50;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if msg == 'Wrong button' or msg == 'Too slow':&amp;#10;    continueRoutine = False&amp;#10;else:&amp;#10;    continueRoutine = True&amp;#10;&amp;#10;dur_sel = 50 # values will range from 60 to 90&amp;#10;#dur_sel = randint(low = 120/2, high = 180/2) # values will range from 60 to 90&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_sel" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_sel">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_sel" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="constant" name="shape"/>
        <Param val="fix_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="$dur_sel" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="s_left_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_left_3" valType="code" updates="None" name="name"/>
        <Param val="keep_me_left" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="$dur_sel" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="s_right_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_right_3" valType="code" updates="None" name="name"/>
        <Param val="keep_me_right" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="$dur_sel" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="s_if_left_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left_selected" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_if_left_3" valType="code" updates="None" name="name"/>
        <Param val="show_me_left" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="$dur_sel" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="s_if_right_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right_selected" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="s_if_right_3" valType="code" updates="None" name="name"/>
        <Param val="show_me_right" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.06, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="$dur_sel" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="Zoom">
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="mov = '';&amp;#10;green_f = 0;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="mov = &quot;&quot;;&amp;#10;green_f = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trial_id === 181)) {&amp;#10;    mov = &quot;video1.mp4&quot;;&amp;#10;} else {&amp;#10;    if ((trial_id === 361)) {&amp;#10;        mov = &quot;video2.mp4&quot;;&amp;#10;    } else {&amp;#10;        mov = &quot;video2.mp4&quot;;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;if ((trial_id &gt;= 181)) {&amp;#10;    green_f = 1;&amp;#10;} else {&amp;#10;    green_f = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trial_id == 181:&amp;#10;    mov = 'video1.mp4'&amp;#10;elif trial_id == 361:&amp;#10;    mov = 'video2.mp4'&amp;#10;else:&amp;#10;    mov = 'video2.mp4'&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if trial_id &gt;= 181:&amp;#10;    green_f = 1;&amp;#10;else:&amp;#10;    green_f = 0;&amp;#10;        " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MovieComponent name="movie">
        <Param val="True" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$mov" valType="str" updates="set every repeat" name="movie"/>
        <Param val="movie" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0,0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="win.size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="pix" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <KeyboardComponent name="key_resp_5">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="info_stim2">
      <CodeComponent name="code_info_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="stim_sizes = [0.1, 0.1];" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="stim_sizes = [0.1, 0.1];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (_pj.in_es6(trial_n, [1])) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if ((block === 1)) {&amp;#10;    im1 = &quot;b_1.png&quot;;&amp;#10;    im2 = &quot;g_1.png&quot;;&amp;#10;    im3 = &quot;p_1.png&quot;;&amp;#10;    im4 = &quot;y_1.png&quot;;&amp;#10;} else {&amp;#10;    if ((block === 2)) {&amp;#10;        im1 = &quot;b_2.png&quot;;&amp;#10;        im2 = &quot;g_2.png&quot;;&amp;#10;        im3 = &quot;p_2.png&quot;;&amp;#10;        im4 = &quot;y_2.png&quot;;&amp;#10;    } else {&amp;#10;        if ((block === 3)) {&amp;#10;            im1 = &quot;b_3.png&quot;;&amp;#10;            im2 = &quot;g_3.png&quot;;&amp;#10;            im3 = &quot;p_3.png&quot;;&amp;#10;            im4 = &quot;y_3.png&quot;;&amp;#10;        } else {&amp;#10;            if ((block === 4)) {&amp;#10;                im1 = &quot;b_4.png&quot;;&amp;#10;                im2 = &quot;g_4.png&quot;;&amp;#10;                im3 = &quot;p_4.png&quot;;&amp;#10;                im4 = &quot;y_4.png&quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trial_n in [1]:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if block == 1:&amp;#10;    im1 = 'b_1.png'&amp;#10;    im2 = 'g_1.png'&amp;#10;    im3 = 'p_1.png'&amp;#10;    im4 = 'y_1.png'&amp;#10;elif block == 2:&amp;#10;    im1 = 'b_2.png'&amp;#10;    im2 = 'g_2.png'&amp;#10;    im3 = 'p_2.png'&amp;#10;    im4 = 'y_2.png'&amp;#10;elif block == 3:&amp;#10;    im1 = 'b_3.png'&amp;#10;    im2 = 'g_3.png'&amp;#10;    im3 = 'p_3.png'&amp;#10;    im4 = 'y_3.png'&amp;#10;elif block == 4:&amp;#10;    im1 = 'b_4.png'&amp;#10;    im2 = 'g_4.png'&amp;#10;    im3 = 'p_4.png'&amp;#10;    im4 = 'y_4.png'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_info_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_4">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="New block. In this block, you will choose between pairs of  slot machines (shown below) that give you variable points. &amp;#10;&amp;#10;To win the game you should select the slot machines strategically so that by the end of the block you have as many points as possible. &amp;#10;&amp;#10;There are a few breaks throughout that also tell you the total number of points you won.&amp;#10;&amp;#10;Press a button to start whenever you're ready. " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="0.56" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image_5">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im1" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.1, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_6">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_6" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.034, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_7">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_7" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.034, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_8">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im4" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_8" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.1, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_7">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_7" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <cedrusButtonBoxComponent name="buttonBox_3">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="code" updates="constant" name="correctAns"/>
        <Param val="0" valType="code" updates="constant" name="deviceNumber"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="buttonBox_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="False" valType="bool" updates="constant" name="useBoxTimer"/>
      </cedrusButtonBoxComponent>
      <ImageComponent name="green_frame_8">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="outline.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="green_frame_8" valType="code" updates="None" name="name"/>
        <Param val="green_f" valType="code" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.7778, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="General_info">
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="msg_intro = '';&amp;#10;group_1 = '';&amp;#10;group_2 = '';" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="msg_intro = &quot;&quot;;&amp;#10;group_1 = &quot;&quot;;&amp;#10;group_2 = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trial_id === 1)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trial_id == 1:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Info_main">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Info_main" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.13)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str('This experiment consists of 3 main blocks. Two separate people will observe your performance during the 2nd and 3rd blocks. One of them will be from your group of') + str(group_1) + str('s while the second will be from your group of ') + str(group_2) + str('s.\n You will see four of the stimuli shown below in different combinations in each block. Your task will be to choose between left or right with the aim to maximise the points you win.')" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="0.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="all_stimuli">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="info_stim.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="all_stimuli" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.11)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.27, 0.251)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_8">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_8" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="prep_zoom">
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="msg_prep = ''&amp;#10;which_group = ''&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="msg_prep = &quot;&quot;;&amp;#10;which_group = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (_pj.in_es6(trial_id, [181, 361])) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if ((group_1 === &quot;underestimators&quot;)) {&amp;#10;    if ((trial_id === 181)) {&amp;#10;        which_group = &quot; unlike you are underestimators.&quot;;&amp;#10;    } else {&amp;#10;        if ((trial_id === 361)) {&amp;#10;            which_group = &quot; are overestimators like you.&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((group_1 === &quot;overestimators&quot;)) {&amp;#10;        if ((trial_id === 181)) {&amp;#10;            which_group = &quot; are overestimators like you.&quot;;&amp;#10;        } else {&amp;#10;            if ((trial_id === 361)) {&amp;#10;                which_group = &quot; unlike you are underestimators.&quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;msg_prep = (&quot;Shortly you will be connected to the first observer who is from a group who &quot; + which_group).toString();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# If participant is overestimator&amp;#10;&amp;#10;if trial_id in [181, 361]:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;if group_1 == 'underestimators':&amp;#10;    if trial_id == 181:&amp;#10;        which_group = ' unlike you are underestimators.';&amp;#10;    elif trial_id == 361:&amp;#10;        which_group = ' are overestimators like you.';&amp;#10;elif group_1 == 'overestimators':&amp;#10;    if trial_id == 181:&amp;#10;        which_group = ' are overestimators like you.';&amp;#10;    elif trial_id == 361:&amp;#10;        which_group = ' unlike you are underestimators.';&amp;#10;&amp;#10;msg_prep = str('Shortly you will be connected to the first observer who is from a group who ' + which_group)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_7">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_7" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg_prep" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="info_start">
      <TextComponent name="text_8">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="info_start1">
      <CodeComponent name="code_info_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="stim_sizes = [0.1, 0.1];&amp;#10;instr = '';&amp;#10;mov = '';&amp;#10;green_f = 0;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="stim_sizes = [0.1, 0.1];&amp;#10;instr = &quot;&quot;;&amp;#10;mov = &quot;&quot;;&amp;#10;green_f = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (_pj.in_es6(trial_n, [1])) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;im1 = &quot;b_4.png&quot;;&amp;#10;im2 = &quot;g_4.png&quot;;&amp;#10;im3 = &quot;p_4.png&quot;;&amp;#10;im4 = &quot;y_4.png&quot;;&amp;#10;instr = &quot;In this practice block, you will choose between pairs of slot machines (shown below) that give you variable points. To win the game you should select the slot machines strategically so that by the end of the block you have as many points as possible. Select the left or right slot machine by using the left or right keys on the keyboard. You have 2 seconds to make your choice. \n Now we will do a short practice. Press the left or right key to start whenever you're ready.&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trial_n in [1]:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;im1 = 'b_4.png'&amp;#10;im2 = 'g_4.png'&amp;#10;im3 = 'p_4.png'&amp;#10;im4 = 'y_4.png'&amp;#10;instr = &quot;In this practice block, you will choose between pairs of slot machines (shown below) that give you variable points. To win the game you should select the slot machines strategically so that by the end of the block you have as many points as possible. Select the left or right slot machine by using the left or right keys on the keyboard. You have 2 seconds to make your choice. \n Now we will do a short practice. Press the left or right key to start whenever you're ready.&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_info_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_10">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.026" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_10" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$instr" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="0.56" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image_9">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im1" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_9" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.1, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_10">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_10" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.034, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_11">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_11" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.034, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image_12">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$im4" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_12" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.1, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="stim_sizes" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_9">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_9" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ending">
      <TextComponent name="text_9">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please notify the experimenter that you have completed the task. Ending experiment." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="trials_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 32), ('left_rew_dbl', 69), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 1), ('trial_id', 541), ('right_rew', '3 2'), ('left_rew', '6 9'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 50), ('left_rew_dbl', 74), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 2), ('trial_id', 542), ('right_rew', '5 0'), ('left_rew', '7 4'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 36), ('left_rew_dbl', 61), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 3), ('trial_id', 543), ('right_rew', '3 6'), ('left_rew', '6 1'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 55), ('left_rew_dbl', 65), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 4), ('trial_id', 544), ('right_rew', '5 5'), ('left_rew', '6 5'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 53), ('left_rew_dbl', 38), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 5), ('trial_id', 545), ('right_rew', '5 3'), ('left_rew', '3 8'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 60), ('left_rew_dbl', 50), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 6), ('trial_id', 546), ('right_rew', '6 0'), ('left_rew', '5 0'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 58), ('left_rew_dbl', 30), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 7), ('trial_id', 547), ('right_rew', '5 8'), ('left_rew', '3 0'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 57), ('left_rew_dbl', 47), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 8), ('trial_id', 548), ('right_rew', '5 7'), ('left_rew', '4 7'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 59), ('left_rew_dbl', 36), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 9), ('trial_id', 549), ('right_rew', '5 9'), ('left_rew', '3 6'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 39), ('left_rew_dbl', 51), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 10), ('trial_id', 550), ('right_rew', '3 9'), ('left_rew', '5 1'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 33), ('left_rew_dbl', 26), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 11), ('trial_id', 551), ('right_rew', '3 3'), ('left_rew', '2 6'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 55), ('left_rew_dbl', 32), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 12), ('trial_id', 552), ('right_rew', '5 5'), ('left_rew', '3 2'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 35), ('left_rew_dbl', 59), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 13), ('trial_id', 553), ('right_rew', '3 5'), ('left_rew', '5 9'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 31), ('left_rew_dbl', 71), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 14), ('trial_id', 554), ('right_rew', '3 1'), ('left_rew', '7 1'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 64), ('left_rew_dbl', 22), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 15), ('trial_id', 555), ('right_rew', '6 4'), ('left_rew', '2 2'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 60), ('left_rew_dbl', 40), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 16), ('trial_id', 556), ('right_rew', '6 0'), ('left_rew', '4 0'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 56), ('left_rew_dbl', 58), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 17), ('trial_id', 557), ('right_rew', '5 6'), ('left_rew', '5 8'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 45), ('left_rew_dbl', 68), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 18), ('trial_id', 558), ('right_rew', '4 5'), ('left_rew', '6 8'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 17), ('left_rew_dbl', 64), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 19), ('trial_id', 559), ('right_rew', '1 7'), ('left_rew', '6 4'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 38), ('left_rew_dbl', 33), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 20), ('trial_id', 560), ('right_rew', '3 8'), ('left_rew', '3 3'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 66), ('left_rew_dbl', 34), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 21), ('trial_id', 561), ('right_rew', '6 6'), ('left_rew', '3 4'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 65), ('left_rew_dbl', 34), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 22), ('trial_id', 562), ('right_rew', '6 5'), ('left_rew', '3 4'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 47), ('left_rew_dbl', 37), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 23), ('trial_id', 563), ('right_rew', '4 7'), ('left_rew', '3 7'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 53), ('left_rew_dbl', 51), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 24), ('trial_id', 564), ('right_rew', '5 3'), ('left_rew', '5 1'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 49), ('left_rew_dbl', 53), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 25), ('trial_id', 565), ('right_rew', '4 9'), ('left_rew', '5 3'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 67), ('left_rew_dbl', 78), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 26), ('trial_id', 566), ('right_rew', '6 7'), ('left_rew', '7 8'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 35), ('left_rew_dbl', 91), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 27), ('trial_id', 567), ('right_rew', '3 5'), ('left_rew', '9 1'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 37), ('left_rew_dbl', 34), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 28), ('trial_id', 568), ('right_rew', '3 7'), ('left_rew', '3 4'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 87), ('left_rew_dbl', 59), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 29), ('trial_id', 569), ('right_rew', '8 7'), ('left_rew', '5 9'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 31), ('left_rew_dbl', 52), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 30), ('trial_id', 570), ('right_rew', '3 1'), ('left_rew', '5 2'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 46), ('left_rew_dbl', 70), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 31), ('trial_id', 571), ('right_rew', '4 6'), ('left_rew', '7 0'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 51), ('left_rew_dbl', 70), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 32), ('trial_id', 572), ('right_rew', '5 1'), ('left_rew', '7 0'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 35), ('left_rew_dbl', 68), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 33), ('trial_id', 573), ('right_rew', '3 5'), ('left_rew', '6 8'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 57), ('left_rew_dbl', 56), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 34), ('trial_id', 574), ('right_rew', '5 7'), ('left_rew', '5 6'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 29), ('left_rew_dbl', 68), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 35), ('trial_id', 575), ('right_rew', '2 9'), ('left_rew', '6 8'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 28), ('left_rew_dbl', 48), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 36), ('trial_id', 576), ('right_rew', '2 8'), ('left_rew', '4 8'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 46), ('left_rew_dbl', 42), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 37), ('trial_id', 577), ('right_rew', '4 6'), ('left_rew', '4 2'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 64), ('left_rew_dbl', 51), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 38), ('trial_id', 578), ('right_rew', '6 4'), ('left_rew', '5 1'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 44), ('left_rew_dbl', 25), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 39), ('trial_id', 579), ('right_rew', '4 4'), ('left_rew', '2 5'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 55), ('left_rew_dbl', 41), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 40), ('trial_id', 580), ('right_rew', '5 5'), ('left_rew', '4 1'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 60), ('left_rew_dbl', 62), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 41), ('trial_id', 581), ('right_rew', '6 0'), ('left_rew', '6 2'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 62), ('left_rew_dbl', 45), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 42), ('trial_id', 582), ('right_rew', '6 2'), ('left_rew', '4 5'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 61), ('left_rew_dbl', 58), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 43), ('trial_id', 583), ('right_rew', '6 1'), ('left_rew', '5 8'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 35), ('left_rew_dbl', 70), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 44), ('trial_id', 584), ('right_rew', '3 5'), ('left_rew', '7 0'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 67), ('left_rew_dbl', 65), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 45), ('trial_id', 585), ('right_rew', '6 7'), ('left_rew', '6 5'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 72), ('left_rew_dbl', 31), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 46), ('trial_id', 586), ('right_rew', '7 2'), ('left_rew', '3 1'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 49), ('left_rew_dbl', 49), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 47), ('trial_id', 587), ('right_rew', '4 9'), ('left_rew', '4 9'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 88), ('left_rew_dbl', 14), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 48), ('trial_id', 588), ('right_rew', '8 8'), ('left_rew', '1 4'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 40), ('left_rew_dbl', 54), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 49), ('trial_id', 589), ('right_rew', '4 0'), ('left_rew', '5 4'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 47), ('left_rew_dbl', 64), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 50), ('trial_id', 590), ('right_rew', '4 7'), ('left_rew', '6 4'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 62), ('left_rew_dbl', 56), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 51), ('trial_id', 591), ('right_rew', '6 2'), ('left_rew', '5 6'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 66), ('left_rew_dbl', 61), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 52), ('trial_id', 592), ('right_rew', '6 6'), ('left_rew', '6 1'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 49), ('left_rew_dbl', 57), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 53), ('trial_id', 593), ('right_rew', '4 9'), ('left_rew', '5 7'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 43), ('left_rew_dbl', 27), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 54), ('trial_id', 594), ('right_rew', '4 3'), ('left_rew', '2 7'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 58), ('left_rew_dbl', 23), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 55), ('trial_id', 595), ('right_rew', '5 8'), ('left_rew', '2 3'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 34), ('left_rew_dbl', 54), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 56), ('trial_id', 596), ('right_rew', '3 4'), ('left_rew', '5 4'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 48), ('left_rew_dbl', 69), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 57), ('trial_id', 597), ('right_rew', '4 8'), ('left_rew', '6 9'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 29), ('left_rew_dbl', 75), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 58), ('trial_id', 598), ('right_rew', '2 9'), ('left_rew', '7 5'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 63), ('left_rew_dbl', 48), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 59), ('trial_id', 599), ('right_rew', '6 3'), ('left_rew', '4 8'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 37), ('left_rew_dbl', 66), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 60), ('trial_id', 600), ('right_rew', '3 7'), ('left_rew', '6 6'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 82), ('left_rew_dbl', 69), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 61), ('trial_id', 601), ('right_rew', '8 2'), ('left_rew', '6 9'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 66), ('left_rew_dbl', 35), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 62), ('trial_id', 602), ('right_rew', '6 6'), ('left_rew', '3 5'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 63), ('left_rew_dbl', 51), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 63), ('trial_id', 603), ('right_rew', '6 3'), ('left_rew', '5 1'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 50), ('left_rew_dbl', 69), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 64), ('trial_id', 604), ('right_rew', '5 0'), ('left_rew', '6 9'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 47), ('left_rew_dbl', 63), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 65), ('trial_id', 605), ('right_rew', '4 7'), ('left_rew', '6 3'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 30), ('left_rew_dbl', 48), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 66), ('trial_id', 606), ('right_rew', '3 0'), ('left_rew', '4 8'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 45), ('left_rew_dbl', 37), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 67), ('trial_id', 607), ('right_rew', '4 5'), ('left_rew', '3 7'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 18), ('left_rew_dbl', 55), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 68), ('trial_id', 608), ('right_rew', '1 8'), ('left_rew', '5 5'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 62), ('left_rew_dbl', 33), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 69), ('trial_id', 609), ('right_rew', '6 2'), ('left_rew', '3 3'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 12), ('left_rew_dbl', 54), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 70), ('trial_id', 610), ('right_rew', '1 2'), ('left_rew', '5 4'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 28), ('left_rew_dbl', 59), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 71), ('trial_id', 611), ('right_rew', '2 8'), ('left_rew', '5 9'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 86), ('left_rew_dbl', 38), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 72), ('trial_id', 612), ('right_rew', '8 6'), ('left_rew', '3 8'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 45), ('left_rew_dbl', 39), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 73), ('trial_id', 613), ('right_rew', '4 5'), ('left_rew', '3 9'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 27), ('left_rew_dbl', 63), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 74), ('trial_id', 614), ('right_rew', '2 7'), ('left_rew', '6 3'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 57), ('left_rew_dbl', 60), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 75), ('trial_id', 615), ('right_rew', '5 7'), ('left_rew', '6 0'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 48), ('left_rew_dbl', 61), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 76), ('trial_id', 616), ('right_rew', '4 8'), ('left_rew', '6 1'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 34), ('left_rew_dbl', 49), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 77), ('trial_id', 617), ('right_rew', '3 4'), ('left_rew', '4 9'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 25), ('left_rew_dbl', 30), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 78), ('trial_id', 618), ('right_rew', '2 5'), ('left_rew', '3 0'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 73), ('left_rew_dbl', 54), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 79), ('trial_id', 619), ('right_rew', '7 3'), ('left_rew', '5 4'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 39), ('left_rew_dbl', 55), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 80), ('trial_id', 620), ('right_rew', '3 9'), ('left_rew', '5 5'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 59), ('left_rew_dbl', 64), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 81), ('trial_id', 621), ('right_rew', '5 9'), ('left_rew', '6 4'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 63), ('left_rew_dbl', 29), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 82), ('trial_id', 622), ('right_rew', '6 3'), ('left_rew', '2 9'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 44), ('left_rew_dbl', 42), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 83), ('trial_id', 623), ('right_rew', '4 4'), ('left_rew', '4 2'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 62), ('left_rew_dbl', 36), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 84), ('trial_id', 624), ('right_rew', '6 2'), ('left_rew', '3 6'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 89), ('left_rew_dbl', 36), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 85), ('trial_id', 625), ('right_rew', '8 9'), ('left_rew', '3 6'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 62), ('left_rew_dbl', 39), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 86), ('trial_id', 626), ('right_rew', '6 2'), ('left_rew', '3 9'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 34), ('left_rew_dbl', 44), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 87), ('trial_id', 627), ('right_rew', '3 4'), ('left_rew', '4 4'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 51), ('left_rew_dbl', 40), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 88), ('trial_id', 628), ('right_rew', '5 1'), ('left_rew', '4 0'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 60), ('left_rew_dbl', 31), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 89), ('trial_id', 629), ('right_rew', '6 0'), ('left_rew', '3 1'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 41), ('left_rew_dbl', 36), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 90), ('trial_id', 630), ('right_rew', '4 1'), ('left_rew', '3 6'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 52), ('left_rew_dbl', 41), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 91), ('trial_id', 631), ('right_rew', '5 2'), ('left_rew', '4 1'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 38), ('left_rew_dbl', 57), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 92), ('trial_id', 632), ('right_rew', '3 8'), ('left_rew', '5 7'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 83), ('left_rew_dbl', 38), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 93), ('trial_id', 633), ('right_rew', '8 3'), ('left_rew', '3 8'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 67), ('left_rew_dbl', 37), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 94), ('trial_id', 634), ('right_rew', '6 7'), ('left_rew', '3 7'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 36), ('left_rew_dbl', 58), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 95), ('trial_id', 635), ('right_rew', '3 6'), ('left_rew', '5 8'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 84), ('left_rew_dbl', 71), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 96), ('trial_id', 636), ('right_rew', '8 4'), ('left_rew', '7 1'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 46), ('left_rew_dbl', 38), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 97), ('trial_id', 637), ('right_rew', '4 6'), ('left_rew', '3 8'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 65), ('left_rew_dbl', 54), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 98), ('trial_id', 638), ('right_rew', '6 5'), ('left_rew', '5 4'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 42), ('left_rew_dbl', 62), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 99), ('trial_id', 639), ('right_rew', '4 2'), ('left_rew', '6 2'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 48), ('left_rew_dbl', 60), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 100), ('trial_id', 640), ('right_rew', '4 8'), ('left_rew', '6 0'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 81), ('left_rew_dbl', 40), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 101), ('trial_id', 641), ('right_rew', '8 1'), ('left_rew', '4 0'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 56), ('left_rew_dbl', 7), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 102), ('trial_id', 642), ('right_rew', '5 6'), ('left_rew', '0 7'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 21), ('left_rew_dbl', 38), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 103), ('trial_id', 643), ('right_rew', '2 1'), ('left_rew', '3 8'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 34), ('left_rew_dbl', 82), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 104), ('trial_id', 644), ('right_rew', '3 4'), ('left_rew', '8 2'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 66), ('left_rew_dbl', 43), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 105), ('trial_id', 645), ('right_rew', '6 6'), ('left_rew', '4 3'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 43), ('left_rew_dbl', 32), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 106), ('trial_id', 646), ('right_rew', '4 3'), ('left_rew', '3 2'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 37), ('left_rew_dbl', 49), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 107), ('trial_id', 647), ('right_rew', '3 7'), ('left_rew', '4 9'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 57), ('left_rew_dbl', 27), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 108), ('trial_id', 648), ('right_rew', '5 7'), ('left_rew', '2 7'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 52), ('left_rew_dbl', 72), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 109), ('trial_id', 649), ('right_rew', '5 2'), ('left_rew', '7 2'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 50), ('left_rew_dbl', 76), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 110), ('trial_id', 650), ('right_rew', '5 0'), ('left_rew', '7 6'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 41), ('left_rew_dbl', 66), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 111), ('trial_id', 651), ('right_rew', '4 1'), ('left_rew', '6 6'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 43), ('left_rew_dbl', 56), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 112), ('trial_id', 652), ('right_rew', '4 3'), ('left_rew', '5 6'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 42), ('left_rew_dbl', 59), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 113), ('trial_id', 653), ('right_rew', '4 2'), ('left_rew', '5 9'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 43), ('left_rew_dbl', 16), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 114), ('trial_id', 654), ('right_rew', '4 3'), ('left_rew', '1 6'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 45), ('left_rew_dbl', 60), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 115), ('trial_id', 655), ('right_rew', '4 5'), ('left_rew', '6 0'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 42), ('left_rew_dbl', 44), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 116), ('trial_id', 656), ('right_rew', '4 2'), ('left_rew', '4 4'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 77), ('left_rew_dbl', 70), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 117), ('trial_id', 657), ('right_rew', '7 7'), ('left_rew', '7 0'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 67), ('left_rew_dbl', 35), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 118), ('trial_id', 658), ('right_rew', '6 7'), ('left_rew', '3 5'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 43), ('left_rew_dbl', 38), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 119), ('trial_id', 659), ('right_rew', '4 3'), ('left_rew', '3 8'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 48), ('left_rew_dbl', 41), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 120), ('trial_id', 660), ('right_rew', '4 8'), ('left_rew', '4 1'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 32), ('left_rew_dbl', 63), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 121), ('trial_id', 661), ('right_rew', '3 2'), ('left_rew', '6 3'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 38), ('left_rew_dbl', 58), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 122), ('trial_id', 662), ('right_rew', '3 8'), ('left_rew', '5 8'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 39), ('left_rew_dbl', 52), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 123), ('trial_id', 663), ('right_rew', '3 9'), ('left_rew', '5 2'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 42), ('left_rew_dbl', 58), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 124), ('trial_id', 664), ('right_rew', '4 2'), ('left_rew', '5 8'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 52), ('left_rew_dbl', 39), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 125), ('trial_id', 665), ('right_rew', '5 2'), ('left_rew', '3 9'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 53), ('left_rew_dbl', 47), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 126), ('trial_id', 666), ('right_rew', '5 3'), ('left_rew', '4 7'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 43), ('left_rew_dbl', 77), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 127), ('trial_id', 667), ('right_rew', '4 3'), ('left_rew', '7 7'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 50), ('left_rew_dbl', 32), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 128), ('trial_id', 668), ('right_rew', '5 0'), ('left_rew', '3 2'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 23), ('left_rew_dbl', 56), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 129), ('trial_id', 669), ('right_rew', '2 3'), ('left_rew', '5 6'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 41), ('left_rew_dbl', 55), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 130), ('trial_id', 670), ('right_rew', '4 1'), ('left_rew', '5 5'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 68), ('left_rew_dbl', 11), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 131), ('trial_id', 671), ('right_rew', '6 8'), ('left_rew', '1 1'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 63), ('left_rew_dbl', 44), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 132), ('trial_id', 672), ('right_rew', '6 3'), ('left_rew', '4 4'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 36), ('left_rew_dbl', 19), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 133), ('trial_id', 673), ('right_rew', '3 6'), ('left_rew', '1 9'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 9), ('left_rew_dbl', 59), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 134), ('trial_id', 674), ('right_rew', '0 9'), ('left_rew', '5 9'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 75), ('left_rew_dbl', 39), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 135), ('trial_id', 675), ('right_rew', '7 5'), ('left_rew', '3 9'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 33), ('left_rew_dbl', 79), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 136), ('trial_id', 676), ('right_rew', '3 3'), ('left_rew', '7 9'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 61), ('left_rew_dbl', 32), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 137), ('trial_id', 677), ('right_rew', '6 1'), ('left_rew', '3 2'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 43), ('left_rew_dbl', 58), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 138), ('trial_id', 678), ('right_rew', '4 3'), ('left_rew', '5 8'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 54), ('left_rew_dbl', 28), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 139), ('trial_id', 679), ('right_rew', '5 4'), ('left_rew', '2 8'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 37), ('left_rew_dbl', 71), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 140), ('trial_id', 680), ('right_rew', '3 7'), ('left_rew', '7 1'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 65), ('left_rew_dbl', 24), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 141), ('trial_id', 681), ('right_rew', '6 5'), ('left_rew', '2 4'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 63), ('left_rew_dbl', 62), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 142), ('trial_id', 682), ('right_rew', '6 3'), ('left_rew', '6 2'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 18), ('left_rew_dbl', 93), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 143), ('trial_id', 683), ('right_rew', '1 8'), ('left_rew', '9 3'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 68), ('left_rew_dbl', 72), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 144), ('trial_id', 684), ('right_rew', '6 8'), ('left_rew', '7 2'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 56), ('left_rew_dbl', 41), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 145), ('trial_id', 685), ('right_rew', '5 6'), ('left_rew', '4 1'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 69), ('left_rew_dbl', 40), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 146), ('trial_id', 686), ('right_rew', '6 9'), ('left_rew', '4 0'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 64), ('left_rew_dbl', 55), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 147), ('trial_id', 687), ('right_rew', '6 4'), ('left_rew', '5 5'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 52), ('left_rew_dbl', 61), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 148), ('trial_id', 688), ('right_rew', '5 2'), ('left_rew', '6 1'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 73), ('left_rew_dbl', 41), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 149), ('trial_id', 689), ('right_rew', '7 3'), ('left_rew', '4 1'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 40), ('left_rew_dbl', 46), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 150), ('trial_id', 690), ('right_rew', '4 0'), ('left_rew', '4 6'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'y_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 50), ('left_rew_dbl', 56), ('stim1', 2), ('stim2', 4), ('trigger_integer', 24), ('block', 4), ('trial_n', 151), ('trial_id', 691), ('right_rew', '5 0'), ('left_rew', '5 6'), ('typeOfChoice', 5), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 57), ('left_rew_dbl', 20), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 152), ('trial_id', 692), ('right_rew', '5 7'), ('left_rew', '2 0'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 40), ('left_rew_dbl', 64), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 153), ('trial_id', 693), ('right_rew', '4 0'), ('left_rew', '6 4'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 37), ('left_rew_dbl', 46), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 154), ('trial_id', 694), ('right_rew', '3 7'), ('left_rew', '4 6'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 69), ('left_rew_dbl', 42), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 155), ('trial_id', 695), ('right_rew', '6 9'), ('left_rew', '4 2'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 43), ('left_rew_dbl', 30), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 156), ('trial_id', 696), ('right_rew', '4 3'), ('left_rew', '3 0'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 61), ('left_rew_dbl', 38), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 157), ('trial_id', 697), ('right_rew', '6 1'), ('left_rew', '3 8'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 62), ('left_rew_dbl', 33), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 158), ('trial_id', 698), ('right_rew', '6 2'), ('left_rew', '3 3'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'b_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 40), ('left_rew_dbl', 62), ('stim1', 1), ('stim2', 3), ('trigger_integer', 13), ('block', 4), ('trial_n', 159), ('trial_id', 699), ('right_rew', '4 0'), ('left_rew', '6 2'), ('typeOfChoice', 2), ('correct', 0.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 67), ('left_rew_dbl', 65), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 160), ('trial_id', 700), ('right_rew', '6 7'), ('left_rew', '6 5'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 47), ('left_rew_dbl', 31), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 161), ('trial_id', 701), ('right_rew', '4 7'), ('left_rew', '3 1'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 60), ('left_rew_dbl', 66), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 162), ('trial_id', 702), ('right_rew', '6 0'), ('left_rew', '6 6'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 60), ('left_rew_dbl', 52), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 163), ('trial_id', 703), ('right_rew', '6 0'), ('left_rew', '5 2'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 57), ('left_rew_dbl', 46), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 164), ('trial_id', 704), ('right_rew', '5 7'), ('left_rew', '4 6'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 53), ('left_rew_dbl', 50), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 165), ('trial_id', 705), ('right_rew', '5 3'), ('left_rew', '5 0'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'p_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 51), ('left_rew_dbl', 44), ('stim1', 3), ('stim2', 2), ('trigger_integer', 32), ('block', 4), ('trial_n', 166), ('trial_id', 706), ('right_rew', '5 1'), ('left_rew', '4 4'), ('typeOfChoice', 4), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 48), ('left_rew_dbl', 50), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 167), ('trial_id', 707), ('right_rew', '4 8'), ('left_rew', '5 0'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 46), ('left_rew_dbl', 13), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 168), ('trial_id', 708), ('right_rew', '4 6'), ('left_rew', '1 3'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'b_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 49), ('left_rew_dbl', 31), ('stim1', 4), ('stim2', 3), ('trigger_integer', 43), ('block', 4), ('trial_n', 169), ('trial_id', 709), ('right_rew', '4 9'), ('left_rew', '3 1'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 40), ('left_rew_dbl', 53), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 170), ('trial_id', 710), ('right_rew', '4 0'), ('left_rew', '5 3'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'g_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 73), ('left_rew_dbl', 45), ('stim1', 4), ('stim2', 1), ('trigger_integer', 41), ('block', 4), ('trial_n', 171), ('trial_id', 711), ('right_rew', '7 3'), ('left_rew', '4 5'), ('typeOfChoice', 3), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'y_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 44), ('left_rew_dbl', 80), ('stim1', 1), ('stim2', 4), ('trigger_integer', 14), ('block', 4), ('trial_n', 172), ('trial_id', 712), ('right_rew', '4 4'), ('left_rew', '8 0'), ('typeOfChoice', 3), ('correct', 0.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'y_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'y_4_d.png'), ('right_rew_dbl', 44), ('left_rew_dbl', 42), ('stim1', 3), ('stim2', 4), ('trigger_integer', 34), ('block', 4), ('trial_n', 173), ('trial_id', 713), ('right_rew', '4 4'), ('left_rew', '4 2'), ('typeOfChoice', 6), ('correct', None)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 59), ('left_rew_dbl', 45), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 174), ('trial_id', 714), ('right_rew', '5 9'), ('left_rew', '4 5'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'g_4.png'), ('right', 'p_4.png'), ('left_selected', 'g_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 55), ('left_rew_dbl', 57), ('stim1', 1), ('stim2', 2), ('trigger_integer', 12), ('block', 4), ('trial_n', 175), ('trial_id', 715), ('right_rew', '5 5'), ('left_rew', '5 7'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'p_4.png'), ('right', 'b_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'b_4_d.png'), ('right_rew_dbl', 39), ('left_rew_dbl', 68), ('stim1', 2), ('stim2', 3), ('trigger_integer', 23), ('block', 4), ('trial_n', 176), ('trial_id', 716), ('right_rew', '3 9'), ('left_rew', '6 8'), ('typeOfChoice', 4), ('correct', 0.0)]), OrderedDict([('left', 'y_4.png'), ('right', 'p_4.png'), ('left_selected', 'y_4_d.png'), ('right_selected', 'p_4_d.png'), ('right_rew_dbl', 58), ('left_rew_dbl', 36), ('stim1', 4), ('stim2', 2), ('trigger_integer', 42), ('block', 4), ('trial_n', 177), ('trial_id', 717), ('right_rew', '5 8'), ('left_rew', '3 6'), ('typeOfChoice', 5), ('correct', 1.0)]), OrderedDict([('left', 'p_4.png'), ('right', 'g_4.png'), ('left_selected', 'p_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 52), ('left_rew_dbl', 64), ('stim1', 2), ('stim2', 1), ('trigger_integer', 21), ('block', 4), ('trial_n', 178), ('trial_id', 718), ('right_rew', '5 2'), ('left_rew', '6 4'), ('typeOfChoice', 1), ('correct', None)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 42), ('left_rew_dbl', 54), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 179), ('trial_id', 719), ('right_rew', '4 2'), ('left_rew', '5 4'), ('typeOfChoice', 2), ('correct', 1.0)]), OrderedDict([('left', 'b_4.png'), ('right', 'g_4.png'), ('left_selected', 'b_4_d.png'), ('right_selected', 'g_4_d.png'), ('right_rew_dbl', 61), ('left_rew_dbl', 45), ('stim1', 3), ('stim2', 1), ('trigger_integer', 31), ('block', 4), ('trial_n', 180), ('trial_id', 720), ('right_rew', '6 1'), ('left_rew', '4 5'), ('typeOfChoice', 2), ('correct', 1.0)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="prep_stim_info.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="info_start1"/>
    <Routine name="info_stim1"/>
    <Routine name="fixation"/>
    <Routine name="cues"/>
    <Routine name="selection_animation"/>
    <Routine name="feedback"/>
    <Routine name="too_slow"/>
    <Routine name="general_feed"/>
    <LoopTerminator name="trials_3"/>
    <Routine name="ending"/>
  </Flow>
</PsychoPy2experiment>
